{
  "address": "0x43Ecd4bd3E346045F954CBB7167cE269754B1045",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "PollContract_AlreadyVotedInPoll",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PollContract_CheckStringsLength",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "receivedTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockTimestamp",
          "type": "uint256"
        }
      ],
      "name": "PollContract_NeededBiggerClosesAtDate",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PollContract_NotEnoughOptionsProvided",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PollContract_PollIsClosed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PollContract_WrongAmountOfOptionsProvided",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "voteId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pollId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "voter",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "optionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pollId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "numberOfVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                }
              ],
              "internalType": "struct PollContract.Option[]",
              "name": "optionsVoted",
              "type": "tuple[]"
            }
          ],
          "indexed": false,
          "internalType": "struct PollContract.Vote",
          "name": "newVote",
          "type": "tuple"
        }
      ],
      "name": "NewVoteInPoll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "allowMultipleOptionsSelected",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "closesAt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "numberOfOptions",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct PollContract.Poll",
          "name": "pollCreated",
          "type": "tuple"
        }
      ],
      "name": "PollCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_allowMultipleOptionsSelected",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_closesAt",
          "type": "uint256"
        },
        {
          "internalType": "string[]",
          "name": "_options",
          "type": "string[]"
        }
      ],
      "name": "createPoll",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pollId",
          "type": "uint256"
        }
      ],
      "name": "getMyVoteInPoll",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "voteId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pollId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "voter",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "optionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pollId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "numberOfVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                }
              ],
              "internalType": "struct PollContract.Option[]",
              "name": "optionsVoted",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct PollContract.Vote",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pollId",
          "type": "uint256"
        }
      ],
      "name": "getPollById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "allowMultipleOptionsSelected",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "closesAt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "numberOfOptions",
              "type": "uint256"
            }
          ],
          "internalType": "struct PollContract.Poll",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "optionId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pollId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numberOfVotes",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "internalType": "struct PollContract.Option[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pollId",
          "type": "uint256"
        }
      ],
      "name": "getPollVotes",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "voteId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pollId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "voter",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "optionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pollId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "numberOfVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                }
              ],
              "internalType": "struct PollContract.Option[]",
              "name": "optionsVoted",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct PollContract.Vote[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPolls",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "allowMultipleOptionsSelected",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "closesAt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "numberOfOptions",
              "type": "uint256"
            }
          ],
          "internalType": "struct PollContract.Poll[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPollsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pollId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "optionsVotedIds",
          "type": "uint256[]"
        }
      ],
      "name": "votePoll",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x32f89a40ebc17cf082fce0f100deebed9c7fb6e4ad84a2b659aac951ade020b3",
  "receipt": {
    "to": null,
    "from": "0x886Fdaae1Bb0Dd3f802E6E20fa1B3243A18d1f15",
    "contractAddress": "0x43Ecd4bd3E346045F954CBB7167cE269754B1045",
    "transactionIndex": 60,
    "gasUsed": "1651622",
    "logsBloom": "0x
    "blockHash": "0x090127afe59ef82d8ce14f2fae68c8fb4fbacf2fbd5141b8d55d44751638fe0f",
    "transactionHash": "0x32f89a40ebc17cf082fce0f100deebed9c7fb6e4ad84a2b659aac951ade020b3",
    "logs": [],
    "blockNumber": 5054829,
    "cumulativeGasUsed": "11304981",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "a6bcf337fe1aa3998d7477ca24f199b1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"PollContract_AlreadyVotedInPoll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PollContract_CheckStringsLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receivedTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTimestamp\",\"type\":\"uint256\"}],\"name\":\"PollContract_NeededBiggerClosesAtDate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PollContract_NotEnoughOptionsProvided\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PollContract_PollIsClosed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PollContract_WrongAmountOfOptionsProvided\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"voteId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pollId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"optionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pollId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfVotes\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"internalType\":\"struct PollContract.Option[]\",\"name\":\"optionsVoted\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct PollContract.Vote\",\"name\":\"newVote\",\"type\":\"tuple\"}],\"name\":\"NewVoteInPoll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"allowMultipleOptionsSelected\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closesAt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numberOfOptions\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct PollContract.Poll\",\"name\":\"pollCreated\",\"type\":\"tuple\"}],\"name\":\"PollCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_allowMultipleOptionsSelected\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_closesAt\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"_options\",\"type\":\"string[]\"}],\"name\":\"createPoll\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pollId\",\"type\":\"uint256\"}],\"name\":\"getMyVoteInPoll\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"voteId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pollId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"optionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pollId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfVotes\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"internalType\":\"struct PollContract.Option[]\",\"name\":\"optionsVoted\",\"type\":\"tuple[]\"}],\"internalType\":\"struct PollContract.Vote\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pollId\",\"type\":\"uint256\"}],\"name\":\"getPollById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"allowMultipleOptionsSelected\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closesAt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numberOfOptions\",\"type\":\"uint256\"}],\"internalType\":\"struct PollContract.Poll\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"optionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pollId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfVotes\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"internalType\":\"struct PollContract.Option[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pollId\",\"type\":\"uint256\"}],\"name\":\"getPollVotes\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"voteId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pollId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"optionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pollId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfVotes\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"internalType\":\"struct PollContract.Option[]\",\"name\":\"optionsVoted\",\"type\":\"tuple[]\"}],\"internalType\":\"struct PollContract.Vote[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPolls\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"allowMultipleOptionsSelected\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closesAt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numberOfOptions\",\"type\":\"uint256\"}],\"internalType\":\"struct PollContract.Poll[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPollsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pollId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"optionsVotedIds\",\"type\":\"uint256[]\"}],\"name\":\"votePoll\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PollContract.sol\":\"PollContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/PollContract.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity >=0.8.2 <0.9.0;\\r\\n\\r\\nerror PollContract_NotEnoughOptionsProvided();\\r\\nerror PollContract_CheckStringsLength();\\r\\nerror PollContract_NeededBiggerClosesAtDate(uint256 receivedTime, uint256 blockTimestamp);\\r\\nerror PollContract_AlreadyVotedInPoll();\\r\\nerror PollContract_PollIsClosed();\\r\\nerror PollContract_PollIsOpen();\\r\\nerror PollContract_WrongAmountOfOptionsProvided();\\r\\n\\r\\ncontract PollContract {\\r\\n    struct Option {\\r\\n        uint256 optionId;\\r\\n        uint256 pollId;\\r\\n        uint256 numberOfVotes;\\r\\n        string name;\\r\\n    }\\r\\n\\r\\n    struct Vote {\\r\\n        uint256 voteId;\\r\\n        uint256 pollId;\\r\\n        address voter;\\r\\n        Option[] optionsVoted;\\r\\n    }\\r\\n\\r\\n    struct Poll {\\r\\n        uint256 id;\\r\\n        string name;\\r\\n        string description;\\r\\n        bool allowMultipleOptionsSelected;\\r\\n        uint256 createdAt;\\r\\n        uint256 closesAt;\\r\\n        address creator;\\r\\n        uint256 numberOfOptions;\\r\\n    }\\r\\n\\r\\n    event PollCreated(Poll pollCreated);\\r\\n    event NewVoteInPoll(Vote newVote);\\r\\n\\r\\n    uint256 private pollsCount;\\r\\n    // poll id\\r\\n    mapping(uint256 => Poll) private polls;\\r\\n    //address (voter) => pollId\\r\\n    mapping(address => mapping(uint256 => Vote)) private globalVotesByAddress;\\r\\n    // poll id => option id\\r\\n    mapping(uint256 => mapping(uint256 => Option)) private pollOptions;\\r\\n    // poll id => voteId\\r\\n    mapping(uint256 => mapping(uint256 => Vote)) private pollVotes;\\r\\n    // poll id\\r\\n    mapping(uint256 => uint256) amountOfVotesInPoll;\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    function createPoll(\\r\\n        string calldata _name,\\r\\n        string calldata _description,\\r\\n        bool _allowMultipleOptionsSelected,\\r\\n        uint256 _closesAt,\\r\\n        string[] calldata _options\\r\\n    ) external payable {\\r\\n        uint256 aproxCurrentTime = block.timestamp;\\r\\n        bytes memory nameToBytes = bytes(_name);\\r\\n        bytes memory descriptionToBytes = bytes(_description);\\r\\n        if (nameToBytes.length > 60 || descriptionToBytes.length > 500) {\\r\\n            revert PollContract_CheckStringsLength();\\r\\n        }\\r\\n        if (_closesAt < aproxCurrentTime) {\\r\\n            revert PollContract_NeededBiggerClosesAtDate(_closesAt, aproxCurrentTime);\\r\\n        }\\r\\n        if (_options.length < 2) {\\r\\n            revert PollContract_NotEnoughOptionsProvided();\\r\\n        }\\r\\n\\r\\n        uint256 newPollId = pollsCount;\\r\\n        Poll storage newPoll = polls[newPollId];\\r\\n\\r\\n        newPoll.id = newPollId;\\r\\n        newPoll.name = _name;\\r\\n        newPoll.description = _description;\\r\\n        newPoll.allowMultipleOptionsSelected = _allowMultipleOptionsSelected;\\r\\n        newPoll.createdAt = aproxCurrentTime;\\r\\n        newPoll.closesAt = _closesAt;\\r\\n        newPoll.creator = msg.sender;\\r\\n\\r\\n        newPoll.numberOfOptions = 0;\\r\\n\\r\\n        for (uint256 i = 0; i < _options.length; i++) {\\r\\n            bytes memory optionNameToBytes = bytes(_options[i]);\\r\\n            if (optionNameToBytes.length > 60) {\\r\\n                revert PollContract_CheckStringsLength();\\r\\n            }\\r\\n            pollOptions[newPollId][i] = Option(i, newPollId, 0, _options[i]);\\r\\n            newPoll.numberOfOptions++;\\r\\n        }\\r\\n\\r\\n        pollsCount++;\\r\\n\\r\\n        emit PollCreated(newPoll);\\r\\n    }\\r\\n\\r\\n    function votePoll(uint256 _pollId, uint256[] calldata optionsVotedIds) external payable {\\r\\n        // checking that sender did not already vote in poll\\r\\n\\r\\n        Poll storage poll = polls[_pollId];\\r\\n        address addressForCheck = globalVotesByAddress[msg.sender][_pollId].voter;\\r\\n\\r\\n        if (addressForCheck != address(0)) {\\r\\n            revert PollContract_AlreadyVotedInPoll();\\r\\n        }\\r\\n\\r\\n        if (poll.closesAt < block.timestamp) {\\r\\n            revert PollContract_PollIsClosed();\\r\\n        }\\r\\n\\r\\n        if (\\r\\n            ((poll.allowMultipleOptionsSelected == false) && optionsVotedIds.length > 1) || (optionsVotedIds.length < 1)\\r\\n        ) {\\r\\n            revert PollContract_WrongAmountOfOptionsProvided();\\r\\n        }\\r\\n\\r\\n        Vote storage newVote = globalVotesByAddress[msg.sender][_pollId];\\r\\n\\r\\n        for (uint256 i = 0; i < optionsVotedIds.length; i++) {\\r\\n            Option storage optionVoted = pollOptions[_pollId][optionsVotedIds[i]];\\r\\n            newVote.optionsVoted.push(optionVoted);\\r\\n            optionVoted.numberOfVotes++;\\r\\n        }\\r\\n\\r\\n        newVote.pollId = _pollId;\\r\\n        newVote.voter = msg.sender;\\r\\n\\r\\n        pollVotes[_pollId][amountOfVotesInPoll[_pollId]] = newVote;\\r\\n\\r\\n        amountOfVotesInPoll[_pollId]++;\\r\\n\\r\\n        emit NewVoteInPoll(newVote);\\r\\n    }\\r\\n\\r\\n    function getPolls() public view returns (Poll[] memory) {\\r\\n        Poll[] memory mPolls = new Poll[](pollsCount);\\r\\n        for (uint256 i = pollsCount; i > 0; i--) {\\r\\n            Poll storage sPoll = polls[i - 1];\\r\\n            mPolls[i - 1] = sPoll;\\r\\n        }\\r\\n\\r\\n        return mPolls;\\r\\n    }\\r\\n\\r\\n    function getPollById(uint256 _pollId) public view returns (Poll memory, Option[] memory, uint256) {\\r\\n        Option[] memory mOptions = new Option[](polls[_pollId].numberOfOptions);\\r\\n\\r\\n        uint256 votesCount = amountOfVotesInPoll[_pollId];\\r\\n\\r\\n        for (uint256 i = 0; i < polls[_pollId].numberOfOptions; i++) {\\r\\n            Option storage sOption = pollOptions[_pollId][i];\\r\\n            mOptions[i] = sOption;\\r\\n        }\\r\\n        return (polls[_pollId], mOptions, votesCount);\\r\\n    }\\r\\n\\r\\n    function getPollsCount() public view returns (uint256) {\\r\\n        return pollsCount;\\r\\n    }\\r\\n\\r\\n    function getMyVoteInPoll(uint256 _pollId) public view returns (Vote memory) {\\r\\n        return globalVotesByAddress[msg.sender][_pollId];\\r\\n    }\\r\\n\\r\\n    function getPollVotes(uint256 _pollId) public view returns (Vote[] memory) {\\r\\n        uint256 votesCount = amountOfVotesInPoll[_pollId];\\r\\n        Vote[] memory mVotes = new Vote[](votesCount);\\r\\n        for (uint256 i = 0; i < votesCount; i++) {\\r\\n            mVotes[i] = pollVotes[_pollId][i];\\r\\n        }\\r\\n        return mVotes;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xff5a7eb1a7603ddf3715a9fb754921f657f651db02a5c58547e4ac731106a6a4\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063bbff71661161004e578063bbff7166146100e2578063cc6183fd1461010f578063d4bc5e9114610122578063e09959161461015157600080fd5b8063120fe89b1461007557806314dc7503146100a05780632e2f3979146100cd575b600080fd5b34801561008157600080fd5b5061008a61016f565b6040516100979190611365565b60405180910390f35b3480156100ac57600080fd5b506100c06100bb3660046113c7565b6103fb565b6040516100979190611491565b6100e06100db3660046114f7565b610584565b005b3480156100ee57600080fd5b506101026100fd3660046113c7565b610844565b6040516100979190611543565b6100e061011d3660046115da565b610a6a565b34801561012e57600080fd5b5061014261013d3660046113c7565b610de5565b60405161009793929190611697565b34801561015d57600080fd5b50600054604051908152602001610097565b60606000805467ffffffffffffffff81111561018d5761018d611739565b60405190808252806020026020018201604052801561021157816020015b6101fe604051806101000160405280600081526020016060815260200160608152602001600015158152602001600081526020016000815260200160006001600160a01b03168152602001600081525090565b8152602001906001900390816101ab5790505b506000549091505b80156103f557600060018161022e8285611765565b815260200190815260200160002090508060405180610100016040529081600082015481526020016001820180546102659061177e565b80601f01602080910402602001604051908101604052809291908181526020018280546102919061177e565b80156102de5780601f106102b3576101008083540402835291602001916102de565b820191906000526020600020905b8154815290600101906020018083116102c157829003601f168201915b505050505081526020016002820180546102f79061177e565b80601f01602080910402602001604051908101604052809291908181526020018280546103239061177e565b80156103705780601f1061034557610100808354040283529160200191610370565b820191906000526020600020905b81548152906001019060200180831161035357829003601f168201915b5050509183525050600382015460ff1615156020820152600482015460408201526005820154606082015260068201546001600160a01b0316608082015260079091015460a090910152836103c6600185611765565b815181106103d6576103d66117b2565b60200260200101819052505080806103ed906117c8565b915050610219565b50919050565b61042f6040518060800160405280600081526020016000815260200160006001600160a01b03168152602001606081525090565b3360009081526002602081815260408084208685528252808420815160808101835281548152600182015481850152938101546001600160a01b0316848301526003810180548351818602810186019094528084529495919460608701949192909184015b8282101561057657838290600052602060002090600402016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820180546104e59061177e565b80601f01602080910402602001604051908101604052809291908181526020018280546105119061177e565b801561055e5780601f106105335761010080835404028352916020019161055e565b820191906000526020600020905b81548152906001019060200180831161054157829003601f168201915b50505050508152505081526020019060010190610494565b505050915250909392505050565b60008381526001602090815260408083203384526002808452828520888652909352922001546001600160a01b031680156105eb576040517f55ed6b1c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4282600501541015610629576040517f056cfd8900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600382015460ff1615801561063e5750600183115b806106495750600183105b15610680576040517f07e70e6a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526002602090815260408083208884529091528120905b84811015610759576000878152600360205260408120818888858181106106c5576106c56117b2565b60209081029290920135835250818101929092526040016000908120600380870180546001818101835591855294909320825460049095020193845582820154928401929092556002808201549084015592508291908181019061072b9084018261182e565b5050506002810180549060006107408361190f565b91905055505080806107519061190f565b91505061069c565b5060018082018781556002808401805473ffffffffffffffffffffffffffffffffffffffff199081163317825560008b8152600460209081526040808320600583528184205484529091529020865481559354948401949094555490820180549093166001600160a01b039190911617909155600380830180548493926107e39290840191611197565b50505060008681526005602052604081208054916108008361190f565b91905055507f85d3e9cb4d98ec6e60217dc7e20d67c15c50a3d54e3f46434e33214054aa9fa88160405161083491906119a5565b60405180910390a1505050505050565b6000818152600560205260408120546060918167ffffffffffffffff81111561086f5761086f611739565b6040519080825280602002602001820160405280156108d457816020015b6108c16040518060800160405280600081526020016000815260200160006001600160a01b03168152602001606081525090565b81526020019060019003908161088d5790505b50905060005b82811015610a62576000858152600460209081526040808320848452825280832081516080810183528154815260018201548185015260028201546001600160a01b031681840152600382018054845181870281018701909552808552919592946060870194939192919084015b82821015610a2a57838290600052602060002090600402016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820180546109999061177e565b80601f01602080910402602001604051908101604052809291908181526020018280546109c59061177e565b8015610a125780601f106109e757610100808354040283529160200191610a12565b820191906000526020600020905b8154815290600101906020018083116109f557829003601f168201915b50505050508152505081526020019060010190610948565b5050505081525050828281518110610a4457610a446117b2565b60200260200101819052508080610a5a9061190f565b9150506108da565b509392505050565b6000429050600089898080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250604080516020601f8f018190048102820181019092528d8152959650909493508c92508b91508190840183828082843760009201919091525050845192935050603c909111905080610af757506101f48151115b15610b1557604051631df63d4d60e01b815260040160405180910390fd5b82861015610b5d576040517f4db8320e000000000000000000000000000000000000000000000000000000008152600481018790526024810184905260440160405180910390fd5b6002841015610b98576040517fe611dbbd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805480825260016020819052604090922081815590918101610bbd8d8f83611a6c565b5060028101610bcd8b8d83611a6c565b506003810180548a151560ff19909116179055600481018590556005810188905560068101805473ffffffffffffffffffffffffffffffffffffffff1916331790556000600782018190555b86811015610d8a576000888883818110610c3557610c356117b2565b9050602002810190610c479190611b2c565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505082519293505050603c1015610ca157604051631df63d4d60e01b815260040160405180910390fd5b6040518060800160405280838152602001858152602001600081526020018a8a85818110610cd157610cd16117b2565b9050602002810190610ce39190611b2c565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250939094525050868152600360208181526040808420888552825292839020855181559085015160018201559184015160028301556060840151919250820190610d5c9082611b73565b505050600783018054906000610d718361190f565b9190505550508080610d829061190f565b915050610c19565b50600080549080610d9a8361190f565b91905055507f19110a9ddd6127e24e936053c6096af655db4f9013a91d281bf9a06ec5f4a7f581604051610dce9190611c2d565b60405180910390a150505050505050505050505050565b610e38604051806101000160405280600081526020016060815260200160608152602001600015158152602001600081526020016000815260200160006001600160a01b03168152602001600081525090565b60008281526001602052604081206007015460609190819067ffffffffffffffff811115610e6857610e68611739565b604051908082528060200260200182016040528015610ec457816020015b610eb16040518060800160405280600081526020016000815260200160008152602001606081525090565b815260200190600190039081610e865790505b506000868152600560205260408120549192505b600087815260016020526040902060070154811015610ff7576000878152600360208181526040808420858552825292839020835160808101855281548152600182015492810192909252600281015493820193909352908201805483916060840191610f449061177e565b80601f0160208091040260200160405190810160405280929190818152602001828054610f709061177e565b8015610fbd5780601f10610f9257610100808354040283529160200191610fbd565b820191906000526020600020905b815481529060010190602001808311610fa057829003601f168201915b505050505081525050848381518110610fd857610fd86117b2565b6020026020010181905250508080610fef9061190f565b915050610ed8565b506001600087815260200190815260200160002082828260405180610100016040529081600082015481526020016001820180546110349061177e565b80601f01602080910402602001604051908101604052809291908181526020018280546110609061177e565b80156110ad5780601f10611082576101008083540402835291602001916110ad565b820191906000526020600020905b81548152906001019060200180831161109057829003601f168201915b505050505081526020016002820180546110c69061177e565b80601f01602080910402602001604051908101604052809291908181526020018280546110f29061177e565b801561113f5780601f106111145761010080835404028352916020019161113f565b820191906000526020600020905b81548152906001019060200180831161112257829003601f168201915b5050509183525050600382015460ff1615156020820152600482015460408201526005820154606082015260068201546001600160a01b0316608082015260079091015460a090910152999198509650945050505050565b8280548282559060005260206000209060040281019282156112085760005260206000209160040282015b828111156112085782548255600180840154908301556002808401549083015582826003808201906111f69084018261182e565b505050916004019190600401906111c2565b50611214929150611218565b5090565b8082111561121457600080825560018201819055600282018190556112406003830182611249565b50600401611218565b5080546112559061177e565b6000825580601f10611265575050565b601f0160209004906000526020600020908101906112839190611286565b50565b5b808211156112145760008155600101611287565b6000815180845260005b818110156112c1576020818501810151868301820152016112a5565b506000602082860101526020601f19601f83011685010191505092915050565b60006101008251845260208301518160208601526113018286018261129b565b9150506040830151848203604086015261131b828261129b565b9150506060830151151560608501526080830151608085015260a083015160a08501526001600160a01b0360c08401511660c085015260e083015160e08501528091505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156113ba57603f198886030184526113a88583516112e1565b9450928501929085019060010161138c565b5092979650505050505050565b6000602082840312156113d957600080fd5b5035919050565b60006080808401835185526020808501518187015260406001600160a01b0381870151168188015260608087015185828a015284815180875260a08b01915060a08160051b8c01019650858301925060005b81811015611481578b8803609f1901835283518051895287810151888a015286810151878a01528501518589018a905261146e8a8a018261129b565b9850509286019291860191600101611432565b50959a9950505050505050505050565b6020815260006114a460208301846113e0565b9392505050565b60008083601f8401126114bd57600080fd5b50813567ffffffffffffffff8111156114d557600080fd5b6020830191508360208260051b85010111156114f057600080fd5b9250929050565b60008060006040848603121561150c57600080fd5b83359250602084013567ffffffffffffffff81111561152a57600080fd5b611536868287016114ab565b9497909650939450505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156113ba57603f198886030184526115868583516113e0565b9450928501929085019060010161156a565b60008083601f8401126115aa57600080fd5b50813567ffffffffffffffff8111156115c257600080fd5b6020830191508360208285010111156114f057600080fd5b60008060008060008060008060a0898b0312156115f657600080fd5b883567ffffffffffffffff8082111561160e57600080fd5b61161a8c838d01611598565b909a50985060208b013591508082111561163357600080fd5b61163f8c838d01611598565b909850965060408b01359150811515821461165957600080fd5b90945060608a0135935060808a0135908082111561167657600080fd5b506116838b828c016114ab565b999c989b5096995094979396929594505050565b600060608083526116aa818401876112e1565b6020848203818601528187518084528284019150828160051b850101838a0160005b8381101561172057868303601f19018552815180518452868101518785015260408082015190850152880151608089850181905261170c8186018361129b565b9688019694505050908501906001016116cc565b5050809650505050505050826040830152949350505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156117785761177861174f565b92915050565b600181811c9082168061179257607f821691505b6020821081036103f557634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000816117d7576117d761174f565b506000190190565b601f82111561182957600081815260208120601f850160051c810160208610156118065750805b601f850160051c820191505b8181101561182557828155600101611812565b5050505b505050565b818103611839575050565b611843825461177e565b67ffffffffffffffff81111561185b5761185b611739565b61186f81611869845461177e565b846117df565b6000601f8211600181146118a3576000831561188b5750848201545b600019600385901b1c1916600184901b178455611908565b600085815260209020601f19841690600086815260209020845b838110156118dd57828601548255600195860195909101906020016118bd565b50858310156118fb5781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b6000600182016119215761192161174f565b5060010190565b600081546119358161177e565b808552602060018381168015611952576001811461196c5761199a565b60ff1985168884015283151560051b88018301955061199a565b866000528260002060005b858110156119925781548a8201860152908301908401611977565b890184019650505b505050505092915050565b6000602080835260a0830184548285015260018086015460408181880152600291506001600160a01b038289015416606081818a015260039150818a01608080818c0152878254808a5260c08d01915060c08160051b8e01019950836000528a600020935060005b81811015611a595760bf198e8c0301835284548b52898501548c8c015288850154888c015283868c0152611a45848c01888701611928565b9a5060049490940193918b01918901611a0d565b50989d9c50505050505050505050505050565b67ffffffffffffffff831115611a8457611a84611739565b611a9883611a92835461177e565b836117df565b6000601f841160018114611acc5760008515611ab45750838201355b600019600387901b1c1916600186901b178355611908565b600083815260209020601f19861690835b82811015611afd5786850135825560209485019460019092019101611add565b5086821015611b1a5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6000808335601e19843603018112611b4357600080fd5b83018035915067ffffffffffffffff821115611b5e57600080fd5b6020019150368190038213156114f057600080fd5b815167ffffffffffffffff811115611b8d57611b8d611739565b611b9b81611869845461177e565b602080601f831160018114611bd05760008415611bb85750858301515b600019600386901b1c1916600185901b178555611825565b600085815260208120601f198616915b82811015611bff57888601518255948401946001909101908401611be0565b5085821015611c1d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208152815460208201526000610100806040840152611c54610120840160018601611928565b838103601f19016060850152611c6d8160028701611928565b9050611c7d600386015460ff1690565b15156080850152600485015460a0850152600585015460c085015260068501546001600160a01b031660e0850152600790940154920191909152509056fea26469706673582212205bbf897cd690be1f8feab73d3c2ccac293c017d385001e7a99adf1f118d90e5764736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 68,
        "contract": "contracts/PollContract.sol:PollContract",
        "label": "pollsCount",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 73,
        "contract": "contracts/PollContract.sol:PollContract",
        "label": "polls",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Poll)56_storage)"
      },
      {
        "astId": 80,
        "contract": "contracts/PollContract.sol:PollContract",
        "label": "globalVotesByAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Vote)39_storage))"
      },
      {
        "astId": 87,
        "contract": "contracts/PollContract.sol:PollContract",
        "label": "pollOptions",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Option)28_storage))"
      },
      {
        "astId": 94,
        "contract": "contracts/PollContract.sol:PollContract",
        "label": "pollVotes",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Vote)39_storage))"
      },
      {
        "astId": 98,
        "contract": "contracts/PollContract.sol:PollContract",
        "label": "amountOfVotesInPoll",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Option)28_storage)dyn_storage": {
        "base": "t_struct(Option)28_storage",
        "encoding": "dynamic_array",
        "label": "struct PollContract.Option[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(Vote)39_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct PollContract.Vote))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Vote)39_storage)"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Option)28_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => struct PollContract.Option))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Option)28_storage)"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Vote)39_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => struct PollContract.Vote))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Vote)39_storage)"
      },
      "t_mapping(t_uint256,t_struct(Option)28_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct PollContract.Option)",
        "numberOfBytes": "32",
        "value": "t_struct(Option)28_storage"
      },
      "t_mapping(t_uint256,t_struct(Poll)56_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct PollContract.Poll)",
        "numberOfBytes": "32",
        "value": "t_struct(Poll)56_storage"
      },
      "t_mapping(t_uint256,t_struct(Vote)39_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct PollContract.Vote)",
        "numberOfBytes": "32",
        "value": "t_struct(Vote)39_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Option)28_storage": {
        "encoding": "inplace",
        "label": "struct PollContract.Option",
        "members": [
          {
            "astId": 21,
            "contract": "contracts/PollContract.sol:PollContract",
            "label": "optionId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 23,
            "contract": "contracts/PollContract.sol:PollContract",
            "label": "pollId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 25,
            "contract": "contracts/PollContract.sol:PollContract",
            "label": "numberOfVotes",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 27,
            "contract": "contracts/PollContract.sol:PollContract",
            "label": "name",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Poll)56_storage": {
        "encoding": "inplace",
        "label": "struct PollContract.Poll",
        "members": [
          {
            "astId": 41,
            "contract": "contracts/PollContract.sol:PollContract",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 43,
            "contract": "contracts/PollContract.sol:PollContract",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 45,
            "contract": "contracts/PollContract.sol:PollContract",
            "label": "description",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 47,
            "contract": "contracts/PollContract.sol:PollContract",
            "label": "allowMultipleOptionsSelected",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 49,
            "contract": "contracts/PollContract.sol:PollContract",
            "label": "createdAt",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 51,
            "contract": "contracts/PollContract.sol:PollContract",
            "label": "closesAt",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 53,
            "contract": "contracts/PollContract.sol:PollContract",
            "label": "creator",
            "offset": 0,
            "slot": "6",
            "type": "t_address"
          },
          {
            "astId": 55,
            "contract": "contracts/PollContract.sol:PollContract",
            "label": "numberOfOptions",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_struct(Vote)39_storage": {
        "encoding": "inplace",
        "label": "struct PollContract.Vote",
        "members": [
          {
            "astId": 30,
            "contract": "contracts/PollContract.sol:PollContract",
            "label": "voteId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 32,
            "contract": "contracts/PollContract.sol:PollContract",
            "label": "pollId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 34,
            "contract": "contracts/PollContract.sol:PollContract",
            "label": "voter",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 38,
            "contract": "contracts/PollContract.sol:PollContract",
            "label": "optionsVoted",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_struct(Option)28_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}